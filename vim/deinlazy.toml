[[plugins]]
repo = 'prettier/vim-prettier'
on_ft = ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'vue']
hook_source = """
let g:prettier#autoformat = 0
let g:prettier#config#single_quote = 'false'
autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.vue PrettierAsync
"""

[[plugins]]
repo = 'evidens/vim-twig'
on_ft = 'twig'

[[plugins]]
repo = 'slim-template/vim-slim'
on_ft = 'slim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'php', 'eruby']
hook_source = """
let g:user_emmet_expandabbr_key = '<C-@>'
let g:user_emmet_leader_key = '<C-i>'
let g:user_emmet_install_global = 0
autocmd! FileType html,css,eruby,php EmmetInstall
"""

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown', 'vimwiki']

[[plugins]]
repo = 'rhysd/vim-crystal'
on_ft = 'crystal'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'Shougo/neocomplete'
on_i = 1

[[plugins]]
repo = 'ujihisa/neco-look'
on_i = 1
depends = ['neocomplete']

[[plugins]]
repo = 'Shougo/neco-syntax'
on_i = 1
depends = ['neocomplete']

[[plugins]]
repo = 'Shougo/neosnippet'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1
depends = ['neocomplete']

[[plugins]]
repo = 'lambdalisue/vim-gista'
on_cmd = ['Gista']
on_func = 'gista#'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
hook_source="""
augroup MyVimFiler
  au!
  autocmd FileType vimfiler nmap <buffer> s <Plug>(vimfiler_toggle_mark_current_line)
  autocmd FileType vimfiler setlocal nonumber
augroup END
let g:vimfiler_safe_mode_by_default = 0
let g:vimfiler_as_default_explorer = 1
let g:vimfiler_min_filename_width = 10
"let g:vimfiler_edit_action = 'tabopen'
let g:vimfiler_data_directory = '/tmp/.vimfiler'
"autocmd FileType vimfiler :map O <Plug>(vimfiler_double_click)
"""

[[plugins]]
repo = 'tobyS/pdv'
on_ft = ['php']

[[plugins]]
repo = 'tobyS/vmustache'
on_ft = ['php']

#[[plugins]]
#repo = 'tpope/vim-rails'
#on_ft = ['ruby']

#[[plugins]]
#repo = 'joonty/vdebug'
#on_ft = ['php']

[[plugins]]
repo = 'mustache/vim-mustache-handlebars'
on_ft = ['mustache']

[[plugins]]
repo = 'tmhedberg/matchit'
on_ft = ['html', 'php']

[[plugins]]
repo = 'vim-scripts/textutil.vim'
on_ft = ['rtf']

[[plugins]]
repo = 'swekaj/php-foldexpr.vim'
on_ft = ['php']

#[[plugins]]
#repo = 'lvht/phpcd.vim'
#on_ft = ['php']
#build = ['composer install']
#

#[[plugins]]
#repo = 'chrisbra/csv.vim'
#on_ft = ['csv']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['php', 'javascript', 'vue']
hook_source = """
let g:ale_sign_column_always = 1
let g:ale_php_phpcs_standard = 'PSR1,PSR2'
let g:ale_linters = {
  \ 'php': ['phpcs', 'php'],
  \ 'javascript': ['eslint']
  \}

let g:ale_fixers = {
\   'php': ['php_cs_fixer']
\}
let g:ale_fix_on_save = 1
"""

[[plugins]]
repo = 'vim-vdebug/vdebug'
on_ft = ['php']
hook_add = """
let g:vdebug_options= {
\    "port" : 9000,
\    "server" : '',
\    "timeout" : 20,
\    "on_close" : 'detach',
\    "break_on_open" : 0,
\    "ide_key" : '',
\    "path_maps" : {},
\    "debug_window_level" : 0,
\    "debug_file_level" : 0,
\    "debug_file" : "",
\    "watch_window_style" : 'expanded',
\    "marker_default" : '⬦',
\    "marker_closed_tree" : '▸',
\    "marker_open_tree" : '▾',
\    "sign_breakpoint" : '>>',
\    "sign_current" : '>',
\    "sign_disabled" : '||',
\}
let g:vdebug_keymap = {
\    "run" : "<F5>",
\    "run_to_cursor" : "<F9>",
\    "step_over" : "<F2>",
\    "step_into" : "<F3>",
\    "step_out" : "<F4>",
\    "close" : "<F6>",
\    "detach" : "<F7>",
\    "set_breakpoint" : "<F10>",
\    "get_context" : "<F11>",
\    "eval_under_cursor" : "<F12>",
\    "eval_visual" : "<Leader>e",
\}
"""

[[plugins]]
repo = 'phpactor/phpactor'
on_ft = 'php'
build = 'composer install'
hook_source="""
autocmd FileType php setlocal omnifunc=phpactor#Complete
function! DefinitionJumpWithPhpactor()
    split
    call phpactor#GotoDefinition()
endfunction
"""
